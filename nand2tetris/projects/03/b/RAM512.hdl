// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way (in=load, sel=address[6..8], a=raml0, b=raml1, c=raml2, d=raml3, e=raml4, f=raml5, g=raml6, h=raml7);
    RAM64 (in=in, load=raml0, address=address[0..5], out=ramo0);
    RAM64 (in=in, load=raml1, address=address[0..5], out=ramo1);
    RAM64 (in=in, load=raml2, address=address[0..5], out=ramo2);
    RAM64 (in=in, load=raml3, address=address[0..5], out=ramo3);
    RAM64 (in=in, load=raml4, address=address[0..5], out=ramo4);
    RAM64 (in=in, load=raml5, address=address[0..5], out=ramo5);
    RAM64 (in=in, load=raml6, address=address[0..5], out=ramo6);
    RAM64 (in=in, load=raml7, address=address[0..5], out=ramo7);
    Mux8Way16 (a=ramo0, b=ramo1, c=ramo2, d=ramo3, e=ramo4, f=ramo5, g=ramo6, h=ramo7, sel=address[6..8], out=out);
}
