// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way (in=load, sel=address[12..13], a=raml0, b=raml1, c=raml2, d=raml3);
    RAM4K (in=in, load=raml0, address=address[0..11], out=ramo0);
    RAM4K (in=in, load=raml1, address=address[0..11], out=ramo1);
    RAM4K (in=in, load=raml2, address=address[0..11], out=ramo2);
    RAM4K (in=in, load=raml3, address=address[0..11], out=ramo3);
    Mux4Way16 (a=ramo0, b=ramo1, c=ramo2, d=ramo3, sel=address[12..13], out=out);
}
